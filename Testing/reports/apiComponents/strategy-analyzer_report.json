{
  "stats": {
    "suites": 2,
    "tests": 10,
    "passes": 1,
    "pending": 0,
    "failures": 9,
    "start": "2023-12-20T11:32:22.138Z",
    "end": "2023-12-20T11:32:22.202Z",
    "duration": 64,
    "testsRegistered": 10,
    "passPercent": 10,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ed38e665-9342-47d9-90ed-75494ed9f933",
      "title": "",
      "fullFile": "/Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js",
      "file": "/apiComponents/strategy-analyzer/userNotifications.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6f000f1c-05ef-41cb-94dc-ee8ff1370fc2",
          "title": "Strategy-Analyzer",
          "fullFile": "/Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js",
          "file": "/apiComponents/strategy-analyzer/userNotifications.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Strategy-Analyzer\"",
              "fullTitle": "Strategy-Analyzer \"before all\" hook in \"Strategy-Analyzer\"",
              "timedOut": false,
              "duration": 31,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(10000); // Increase timeout to 10 seconds\nawait waitForServerToBeReady(STRATEGY_ANALYZER_URLS.HEALTH);",
              "err": {},
              "uuid": "477102bc-cb1e-441c-a73a-c42eb2c0c79d",
              "parentUUID": "6f000f1c-05ef-41cb-94dc-ee8ff1370fc2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5550d58e-c5d1-4394-b591-561c08040211",
              "title": "routes",
              "fullFile": "/Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js",
              "file": "/apiComponents/strategy-analyzer/userNotifications.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "health",
                  "fullTitle": "Strategy-Analyzer routes health",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = await apiConnector.get(STRATEGY_ANALYZER_URLS.HEALTH);\nexpect(await result.status).to.equal(200);",
                  "err": {},
                  "uuid": "caf38ba7-7cef-4487-8024-a84d8dc215a2",
                  "parentUUID": "5550d58e-c5d1-4394-b591-561c08040211",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "loadUserNotifications",
                  "fullTitle": "Strategy-Analyzer routes loadUserNotifications",
                  "timedOut": false,
                  "duration": 14,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const result = await apiConnector.get(STRATEGY_ANALYZER_URLS.USERS_NOTIFICATIONS.loadUserNotifications);\nexpect(await result.status).to.equal(200);\n// Add more assertions as needed to check the response data",
                  "err": {
                    "message": "AssertionError: expected 500 to equal 200",
                    "estack": "AssertionError: expected 500 to equal 200\n    at Context.<anonymous> (file:///Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js:41:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                    "diff": "- 500\n+ 200\n"
                  },
                  "uuid": "73f949c3-8faa-43c0-b22a-c93fb2ea21c7",
                  "parentUUID": "5550d58e-c5d1-4394-b591-561c08040211",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "saveUserNotifications",
                  "fullTitle": "Strategy-Analyzer routes saveUserNotifications",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const result = await apiConnector.post(STRATEGY_ANALYZER_URLS.USERS_NOTIFICATIONS.saveUserNotifications);\nexpect(await result.status).to.equal(200);\n// Add more assertions as needed to check the response data",
                  "err": {
                    "message": "AssertionError: expected 'Error' to equal 200",
                    "estack": "AssertionError: expected 'Error' to equal 200\n    at Context.<anonymous> (file:///Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js:47:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                    "diff": null
                  },
                  "uuid": "2aa6008e-8b26-42a3-9d3b-384ec18c388b",
                  "parentUUID": "5550d58e-c5d1-4394-b591-561c08040211",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "addNotification",
                  "fullTitle": "Strategy-Analyzer routes addNotification",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const result = await apiConnector.post(STRATEGY_ANALYZER_URLS.USERS_NOTIFICATIONS.addNotification);\nexpect(await result.status).to.equal(200);\n// Add more assertions as needed to check the response data",
                  "err": {
                    "message": "AssertionError: expected 'Error' to equal 200",
                    "estack": "AssertionError: expected 'Error' to equal 200\n    at Context.<anonymous> (file:///Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js:53:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                    "diff": null
                  },
                  "uuid": "093ade9e-fead-41d4-9d71-9f7f1535d964",
                  "parentUUID": "5550d58e-c5d1-4394-b591-561c08040211",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removeNotification",
                  "fullTitle": "Strategy-Analyzer routes removeNotification",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const queryParams = {\n    pairName: 'someValue',\n    timeframe: 'someValue',\n    notificationType: 'someValue',\n    notificationId: 'someValue',\n};\nconst result = await apiConnector.delete(STRATEGY_ANALYZER_URLS.USERS_NOTIFICATIONS.removeNotification, queryParams);\nexpect(await result.status).to.equal(200);\n// Add more assertions as needed to check the response data",
                  "err": {
                    "message": "TypeError: apiConnector.delete is not a function",
                    "estack": "TypeError: apiConnector.delete is not a function\n    at Context.<anonymous> (file:///Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js:64:53)\n    at process.processImmediate (node:internal/timers:478:21)",
                    "diff": null
                  },
                  "uuid": "c06bde46-0d5d-413b-ab54-2a922a448392",
                  "parentUUID": "5550d58e-c5d1-4394-b591-561c08040211",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "updateNotification",
                  "fullTitle": "Strategy-Analyzer routes updateNotification",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const queryParams = {\n    pairName: 'someValue',\n    timeframe: 'someValue',\n    notificationType: 'someValue',\n    notificationId: 'someValue',\n};\nconst result = await apiConnector.put(STRATEGY_ANALYZER_URLS.USERS_NOTIFICATIONS.updateNotification, queryParams);\nexpect(await result.status).to.equal(200);\n// Add more assertions as needed to check the response data",
                  "err": {
                    "message": "AssertionError: expected 'Error' to equal 200",
                    "estack": "AssertionError: expected 'Error' to equal 200\n    at Context.<anonymous> (file:///Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js:77:44)",
                    "diff": null
                  },
                  "uuid": "2c16c765-27ca-47a0-b188-f3fa8ddf0697",
                  "parentUUID": "5550d58e-c5d1-4394-b591-561c08040211",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getNotification",
                  "fullTitle": "Strategy-Analyzer routes getNotification",
                  "timedOut": false,
                  "duration": 4,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const queryParams = {\n    userId: 'someValue',\n    pairName: 'someValue',\n    timeframe: 'someValue',\n    notificationType: 'someValue',\n};\nconst result = await apiConnector.get(STRATEGY_ANALYZER_URLS.USERS_NOTIFICATIONS.getNotification, queryParams);\nexpect(await result.status).to.equal(200);\n// Add more assertions as needed to check the response data",
                  "err": {
                    "message": "AssertionError: expected 500 to equal 200",
                    "estack": "AssertionError: expected 500 to equal 200\n    at Context.<anonymous> (file:///Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js:89:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                    "diff": "- 500\n+ 200\n"
                  },
                  "uuid": "2e2c78e0-854f-4e01-adc2-35ec3ee0cb74",
                  "parentUUID": "5550d58e-c5d1-4394-b591-561c08040211",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "getNotificationForPairAndTimeframe",
                  "fullTitle": "Strategy-Analyzer routes getNotificationForPairAndTimeframe",
                  "timedOut": false,
                  "duration": 4,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const queryParams = {\n    pairName: 'someValue',\n    timeframe: 'someValue',\n    notificationType: 'someValue',\n};\nconst result = await apiConnector.get(STRATEGY_ANALYZER_URLS.USERS_NOTIFICATIONS.getNotificationForPairAndTimeframe, queryParams);\nexpect(await result.status).to.equal(200);\n// Add more assertions as needed to check the response data",
                  "err": {
                    "message": "AssertionError: expected 500 to equal 200",
                    "estack": "AssertionError: expected 500 to equal 200\n    at Context.<anonymous> (file:///Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js:100:44)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                    "diff": "- 500\n+ 200\n"
                  },
                  "uuid": "c4385783-b0f2-4db8-aea2-b6d896e227ae",
                  "parentUUID": "5550d58e-c5d1-4394-b591-561c08040211",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "markNotificationAsSent",
                  "fullTitle": "Strategy-Analyzer routes markNotificationAsSent",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const queryParams = {\n    notificationId: 'someValue',\n};\nconst result = await apiConnector.put(STRATEGY_ANALYZER_URLS.USERS_NOTIFICATIONS.markNotificationAsSent, queryParams);\nexpect(await result.status).to.equal(200);\n// Add more assertions as needed to check the response data",
                  "err": {
                    "message": "AssertionError: expected 'Error' to equal 200",
                    "estack": "AssertionError: expected 'Error' to equal 200\n    at Context.<anonymous> (file:///Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js:109:44)",
                    "diff": null
                  },
                  "uuid": "a3bd46d7-0216-4669-912b-8198969d1829",
                  "parentUUID": "5550d58e-c5d1-4394-b591-561c08040211",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "resetNotificationSentStatus",
                  "fullTitle": "Strategy-Analyzer routes resetNotificationSentStatus",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const queryParams = {\n    notificationId: 'someValue',\n};\nconst result = await apiConnector.put(STRATEGY_ANALYZER_URLS.USERS_NOTIFICATIONS.resetNotificationSentStatus, queryParams);\nexpect(await result.status).to.equal(200);\n// Add more assertions as needed to check the response data",
                  "err": {
                    "message": "AssertionError: expected 'Error' to equal 200",
                    "estack": "AssertionError: expected 'Error' to equal 200\n    at Context.<anonymous> (file:///Users/beniben/Domaines_De_vie/Business/GPT_Trading/Testing/apiComponents/strategy-analyzer/userNotifications.test.js:118:44)",
                    "diff": null
                  },
                  "uuid": "058fdc67-628f-4fc8-9ef1-d70d8abd94d1",
                  "parentUUID": "5550d58e-c5d1-4394-b591-561c08040211",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "caf38ba7-7cef-4487-8024-a84d8dc215a2"
              ],
              "failures": [
                "73f949c3-8faa-43c0-b22a-c93fb2ea21c7",
                "2aa6008e-8b26-42a3-9d3b-384ec18c388b",
                "093ade9e-fead-41d4-9d71-9f7f1535d964",
                "c06bde46-0d5d-413b-ab54-2a922a448392",
                "2c16c765-27ca-47a0-b188-f3fa8ddf0697",
                "2e2c78e0-854f-4e01-adc2-35ec3ee0cb74",
                "c4385783-b0f2-4db8-aea2-b6d896e227ae",
                "a3bd46d7-0216-4669-912b-8198969d1829",
                "058fdc67-628f-4fc8-9ef1-d70d8abd94d1"
              ],
              "pending": [],
              "skipped": [],
              "duration": 28,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "./apiComponents/strategy-analyzer_report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "./reports",
        "reportFilename": "./apiComponents/strategy-analyzer_report"
      },
      "version": "6.2.0"
    }
  }
}